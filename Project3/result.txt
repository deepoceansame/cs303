# Installation
conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch  ----->paste from pytorch.org for using cuda
requirements.txt is not used. But this may be needed thop==0.0.31-2005241907

# The accuracy, infer time, MACs and params of reference model (LeNet-5)
----------------------------------------------------------------
| Model Name | Accuracy | Infer Time(ms) | Params(M) | MACs(M) |
----------------------------------------------------------------
|    LeNet-5 |    0.980 |          0.139 |     0.206 |   0.060 |
----------------------------------------------------------------
# The accuracy, infer time, MACs and params of your model (YourNet)
----------------------------------------------------------------
|   Model Name | Accuracy | Infer Time(ms) | Params(M) | MACs(M) |
----------------------------------------------------------------
|      YourNet |    0.989 |          0.130 |     0.051 |   0.014 |
----------------------------------------------------------------
# The command to run “./train_yournet.py”
 python train_yournet.py --checkpoint-dir ./checkpoints/yournet100/ --epoch-end 20 --device cuda
# The command to run “./test_yournet.py”
 python test_yournet.py --best-checkpoint ./checkpoints/yournet_keepclear/epoch-18.pth
# Others

What is done:
build a compact YourNet.py, a compact network and let it be the student.
The provided pretrained LeNet5 is the teacher.
When training student, use the MSELoss of logits(output) of teacher and student to decorate the loss(plus to the loss)
After training, then there is a workable compact student model.

1.Need 20 epoch to get a good model
2.The best epoch is stored in the ./checkpoints/BestYourNetPoch it is the same with ./checkpoints/yournet_keepclear/epoch-18.pth
3.There is a train_log.txt which stored ten train result. the result is stored in checkpoints
4.There is a train_record that store one whole procedure of a train.

if there is wrong in record of train_log, can use 3_getBestPochForYourNet.py to get the best epoch in a folder

comparison of time: test 10 times
yournet: 0.142 0.140 0.144 0.137 0.136 0.141 0.135 0.134 0.142 0.145 avg=0.1396
lenet5:  0.144 0.143 0.137 0.139 0.144 0.143 0.142 0.137 0.135 0.135 avg=0.1399



content of train_log:
first run: result in checkpoints/YourNet1 best 0.988 in epoch-17
second run: result in checkpoints/yournet_keepclear best 0.989 in epoch-18 store it into BestYournetPoch
third run: result in checkpoints/yournet2 best 0.987 in epoch-18
forth run: result in checkpoints/yournet3 best 0.986 in epoch-19 change T to 0.033 this time worse then change T back to 0.05
fifth run: result in checkpoints/yournet4 best 0.988 in epoch-14 and 15
sixth run: result in checkpoints/yournet5 best 0.984 in epoch-17
seventh run: result in checkpoints/yournet6 best 0.987 in epoch-19
eighth run: result in checkpoints/yournet7 best 0.987 in epoch-18
ninth run: result in checkpoints/yournet8 best 0.987 in  epoch-19
tenth run: result in checkpoints/yournet9 best 0.987 in epoch-16

run train_yournet.py
each train is 20 epoch
python train_yournet.py --checkpoint-dir ./checkpoints/XXX/ --epoch-end 20

